function trafficArray = trafficLights()%initialize all traffic lights to zero%trafficArray = [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];% shiftOut(trafficArray);%initialize timerglobal gtimer% Traffic Signal Timingif toc(gtimer) < 15    signalA('R');    signalB('R');    signalC('G');    signalD('G');    signalE('R');    shiftOut(trafficArray);elseif toc(gtimer) >= 15 && toc(gtimer) < 21    signalA('R');    signalB('R');    signalC('Y');    signalD('Y');    signalE('R');    shiftOut(trafficArray);elseif toc(gtimer) >= 21 && toc(gtimer) < 24    signalA('G');    signalB('G');    signalC('R');    signalD('R');    signalE('R');    shiftOut(trafficArray);elseif toc(gtimer) >= 24 && toc(gtimer) < 27    signalA('Y');    signalB('G');    signalC('R');    signalD('R');    signalE('R');    shiftOut(trafficArray);elseif toc(gtimer) >= 27 && toc(gtimer) < 39    signalA('R');    signalB('G');    signalC('R');    signalD('R');    signalE('G');    shiftOut(trafficArray);elseif toc(gtimer) >= 39 && toc(gtimer) < 45    signalA('R');    signalB('Y');    signalC('R');    signalD('R');    signalE('Y');    shiftOut(trafficArray);else    gtreset() % If greater than 45, it automatically resets the time.end% Nested: Traffic Light Change functions (can access outer variables)function signalA(state)% Inputs: 'R', 'Y', 'G'% Outputs: Changes trafficArray array.trafficArray(1:3) = 0;switch(state)    case 'R'        trafficArray(1) = 1;    case 'Y'        trafficArray(2) = 1;    case 'G'        trafficArray(3) = 1;    otherwise        trafficArray(1:3) = 0;end %end switch caseend %End of signalA()function signalB(state)% Inputs: 'R', 'Y', 'G'% Outputs: Changes trafficArray array.trafficArray(4:6) = 0;switch(state)    case 'R'        trafficArray(4) = 1;    case 'Y'        trafficArray(5) = 1;    case 'G'        trafficArray(6) = 1;    otherwise        trafficArray(4:6) = 0;end %end switch caseend %End of signalB()function signalC(state)% Inputs: 'R', 'Y', 'G'% Outputs: Changes trafficArray array.trafficArray(7:9) = 0;switch(state)    case 'R'        trafficArray(7) = 1;    case 'Y'        trafficArray(8) = 1;    case 'G'        trafficArray(9) = 1;    otherwise        trafficArray(7:9) = 0;end %end switch caseend %End of signalC()function signalD(state)% Inputs: 'R', 'Y', 'G'% Outputs: Changes trafficArray array.trafficArray(10:12) = 0;switch(state)    case 'R'        trafficArray(10) = 1;    case 'Y'        trafficArray(11) = 1;    case 'G'        trafficArray(12) = 1;    otherwise        trafficArray(10:12) = 0;end %end switch caseend %End of signalD()function signalE(state)% Inputs: 'R', 'Y', 'G'% Outputs: Changes trafficArray array.trafficArray(13:15) = 0;switch(state)    case 'R'        trafficArray(13) = 1;    case 'Y'        trafficArray(14) = 1;    case 'G'        trafficArray(15) = 1;    otherwise        trafficArray(13:15) = 0;end %end switch caseend %End of signalE()end %End of full function